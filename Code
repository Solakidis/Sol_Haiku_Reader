/* eslint-disable  func-names */
/* eslint-disable  no-console */

const Alexa = require('ask-sdk-core');

const GetNewFactHandler = {
  canHandle(handlerInput) {
    const request = handlerInput.requestEnvelope.request;
    return request.type === 'LaunchRequest'
      || (request.type === 'IntentRequest');
  },
  handle(handlerInput) {
    const factArr = data;
    const factIndex = Math.floor(Math.random() * factArr.length);
    const randomFact = factArr[factIndex];
    const speechOutput = GET_FACT_MESSAGE + randomFact;

    return handlerInput.responseBuilder
      .speak(speechOutput)
      .withSimpleCard(SKILL_NAME, randomFact)
      .getResponse();
  },
};

const HelpHandler = {
  canHandle(handlerInput) {
    const request = handlerInput.requestEnvelope.request;
    return request.type === 'IntentRequest'
      && request.intent.name === 'AMAZON.HelpIntent';
  },
  handle(handlerInput) {
    return handlerInput.responseBuilder
      .speak(HELP_MESSAGE)
      .reprompt(HELP_REPROMPT)
      .getResponse();
  },
};

const ExitHandler = {
  canHandle(handlerInput) {
    const request = handlerInput.requestEnvelope.request;
    return request.type === 'IntentRequest'
      && (request.intent.name === 'AMAZON.CancelIntent'
        || request.intent.name === 'AMAZON.StopIntent');
  },
  handle(handlerInput) {
    return handlerInput.responseBuilder
      .speak(STOP_MESSAGE)
      .getResponse();
  },
};

const SessionEndedRequestHandler = {
  canHandle(handlerInput) {
    const request = handlerInput.requestEnvelope.request;
    return request.type === 'SessionEndedRequest';
  },
  handle(handlerInput) {
    console.log(`Session ended with reason: ${handlerInput.requestEnvelope.request.reason}`);

    return handlerInput.responseBuilder.getResponse();
  },
};

const ErrorHandler = {
  canHandle() {
    return true;
  },
  handle(handlerInput, error) {
    console.log(`Error handled: ${error.message}`);

    return handlerInput.responseBuilder
      .speak('Sorry, an error occurred.')
      .reprompt('Sorry, an error occurred.')
      .getResponse();
  },
};

const SKILL_NAME = 'Haiku Reader';
const GET_FACT_MESSAGE = 'I have a haiku for you: ';
const HELP_MESSAGE = 'You can say tell me a haiku...  or, you can say stop... What can I help you with?';
const HELP_REPROMPT = 'You can ask me to tell a haiku or exit to stop. What can I help you with?';
const STOP_MESSAGE = 'Goodbye!';

const data = [
  `Much awaited sound
Echoes heard amid dense trees
Cuckoo has arrived.`,

  `Like crunchy cornflakes.
Gold leaves rustle underfoot.
Beauty in decay.`,

  `The chill, worming in.
Shock, pleasure, bursting within.
Summer tongue awakes.`,

  `You and me alone.
Madness of world locked away.
Peace and quiet reigns.`,

  `Calm as a river.
Tranquility in my heart.
Blue summer skies reign.`,

  `Strokes of affection.
Light and tenderly expressed.
Keep loveâ€™s bonds so strong.`,

  `Mellow, mild, May day.
calling children out to play.
Summer's on her way.`,

  `Beautiful sunrise.
On a warm summer morning.
I wait for day's start.`,

  `I was in fire.
The room was dark and somber.
I sleep peacefully.`,

  `Coolness fills the air.
Scarves and sweaters everywhere.
Fall weather is here.`,

  `Your eyes are fire.
Their image burnt into my soul.
Scarred by beauty.`,

  `Picking up pebbles.
Or seashells strewn on soft sand.
Pure relaxation.`,

  `Yellow flame flickers.
Shadows dance upon the wall.
Love grows ever strong.`,

  `Glorious sunset.
Decorating the night sky.
Awaiting the moon.`,

  `Winter fights to stay.
Sweet Spring always wins her way.
Flowers bloomed today.`,

  `Rain hits my window.
Angels tap-dancing softly.
A heavenly sound.`,

  `Mom, you are the best.
You work all day long.
I think you deserve a rest.`,

  `The beach is calming.
I love the beach and the sand.
And being sun-kissed.`
];

const skillBuilder = Alexa.SkillBuilders.custom();

exports.handler = skillBuilder
  .addRequestHandlers(
    GetNewFactHandler,
    HelpHandler,
    ExitHandler,
    SessionEndedRequestHandler
  )
  .addErrorHandlers(ErrorHandler)
  .lambda();
